name: CI

permissions:
  contents: read
  packages: write
  deployments: write
  issues: write
  pull-requests: write

on:
  push:
    branches:
      - main
    tags:
      - '*'
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      # HUEY_IMMEDIATE: 'True'
      DATABASE_URL: postgres://postgres:postgres@localhost:5432/postgres
      ALGOLIA_APP_ID: ${{ secrets.ALGOLIA_APP_ID }}
      ALGOLIA_API_KEY: ${{ secrets.ALGOLIA_API_KEY }}
    services:
      postgres:
        image: ankane/pgvector:latest
        ports:
          - 5432:5432
        env:
          POSTGRES_DB: postgres
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: |
          pip install --cache-dir .cache/pip -U pip
          pip install --cache-dir .cache/pip -r requirements.txt
      - name: Collect static
        run: python manage.py collectstatic --noinput
      - name: Run tests
        run: python manage.py test

  build-production:
    needs: test
    runs-on: ubuntu-latest
    env:
      ALGOLIA_APP_ID: ${{ secrets.ALGOLIA_APP_ID }}
      ALGOLIA_API_KEY: ${{ secrets.ALGOLIA_API_KEY }}
    steps:
      - uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Debug
        run: |
          echo "ALGOLIA_APP_ID is set: ${{ secrets.ALGOLIA_APP_ID != '' }}"
          echo "ALGOLIA_API_KEY is set: ${{ secrets.ALGOLIA_API_KEY != '' }}"
      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./deployment/django/Dockerfile
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/swotting-prod:latest
          build-args: |
            ALGOLIA_APP_ID=${{ secrets.ALGOLIA_APP_ID }}
            ALGOLIA_API_KEY=${{ secrets.ALGOLIA_API_KEY }}

  deploy-to-digitalocean:
    needs: build-production
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install and configure doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup SSH for Droplet access
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H $(doctl compute droplet get swotting --format PublicIPv4) >> ~/.ssh/known_hosts

      - name: Deploy and run scraper
        run: |
          DROPLET_IP=$(doctl compute droplet get swotting --format PublicIPv4)
          ssh -i ~/.ssh/id_rsa root@$DROPLET_IP "
            cd /home/swotting &&
            export ALGOLIA_APP_ID='${{ secrets.ALGOLIA_APP_ID }}' &&
            export ALGOLIA_API_KEY='${{ secrets.ALGOLIA_API_KEY }}' &&
            docker pull ghcr.io/${{ github.repository_owner }}/swotting-prod:latest &&
            docker compose -f deployment/docker-compose.yml down &&
            ALGOLIA_APP_ID='${{ secrets.ALGOLIA_APP_ID }}' ALGOLIA_API_KEY='${{ secrets.ALGOLIA_API_KEY }}' \
            docker compose -f deployment/docker-compose.yml up -d &&
            sleep 10 &&
            CONTAINER_NAME=$(docker compose -f deployment/docker-compose.yml ps -q web) &&
            docker exec $CONTAINER_NAME python manage.py scrape edx
          "

