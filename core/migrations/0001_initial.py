# Generated by Django 4.2.11 on 2024-05-21 18:43

import django.core.serializers.json
from django.db import migrations, models
import django.db.models.deletion
import django_lifecycle.mixins
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('taggit', '0006_rename_taggeditem_content_type_object_id_taggit_tagg_content_8fc721_idx'),
    ]

    operations = [
        migrations.CreateModel(
            name='DigitalLearningResourceCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, db_index=True, max_length=200, null=True, unique=True)),
            ],
            options={
                'verbose_name': 'Learning Resource Category',
                'verbose_name_plural': 'Learning Resource Categories',
            },
        ),
        migrations.CreateModel(
            name='DigitalLearningResourcePlatform',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, db_index=True, max_length=200, null=True)),
                ('url', models.URLField(blank=True, null=True)),
                ('regex', models.CharField(blank=True, max_length=200, null=True)),
                ('logo', models.ImageField(blank=True, null=True, upload_to='learning-resources/platform-logos')),
            ],
            options={
                'verbose_name': 'Learning Resource Platform',
                'verbose_name_plural': 'Learning Resource Platforms',
            },
        ),
        migrations.CreateModel(
            name='DigitalLearningResource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('slug', models.SlugField(max_length=200, unique=True)),
                ('thumbnail_file', models.ImageField(blank=True, null=True, upload_to='learning-resources/thumbnails')),
                ('active', models.BooleanField(default=True)),
                ('public', models.BooleanField(default=True)),
                ('extra_data', models.JSONField(blank=True, default=dict, encoder=django.core.serializers.json.DjangoJSONEncoder, help_text='Any additional metadata provided.')),
                ('external_id', models.CharField(blank=True, db_index=True, max_length=200, null=True, unique=True)),
                ('thumbnail_url', models.URLField(blank=True, max_length=450, null=True)),
                ('url', models.URLField(blank=True, null=True, unique=True)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='digital_learning_resources', to='core.digitallearningresourcecategory')),
                ('platform', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='digital_learning_resources', to='core.digitallearningresourceplatform')),
                ('tags', taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
            ],
            options={
                'abstract': False,
            },
            bases=(django_lifecycle.mixins.LifecycleModelMixin, models.Model),
        ),
    ]
